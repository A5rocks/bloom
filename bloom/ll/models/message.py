from __future__ import annotations

import datetime as dt
import typing as t

import attr

from .application_commands import MessageInteraction
from .base import UNKNOWN, Snowflake, Unknownish
from .channel import (
    Attachment,
    Channel,
    ChannelMention,
    Embed,
    MessageActivity,
    MessageReference,
    Reaction,
)
from .guild import GuildMember
from .message_components import Component
from .sticker import Sticker, StickerItem
from .user import User


@attr.frozen(kw_only=True)
class Message:
    #: id of the message
    id: Snowflake
    #: id of the channel the message was sent in
    channel_id: Snowflake
    #: the author of this message (not guaranteed to be a valid user, see
    #: below)
    author: User
    #: member properties for this message's author
    member: Unknownish[GuildMember] = UNKNOWN
    #: contents of the message
    content: str
    #: when this message was sent
    timestamp: dt.datetime
    #: when this message was edited (or null if never)
    edited_timestamp: t.Optional[dt.datetime]
    #: whether this was a TTS message
    tts: bool
    #: whether this message mentions everyone
    mention_everyone: bool
    #: users specifically mentioned in the message
    mentions: t.List[User]
    #: roles specifically mentioned in this message
    mention_roles: t.List[Snowflake]
    #: channels specifically mentioned in this message
    mention_channels: Unknownish[t.List[ChannelMention]] = UNKNOWN
    #: any attached files
    attachments: t.List[Attachment]
    #: any embedded content
    embeds: t.List[Embed]
    #: whether this message is pinned
    pinned: bool
    #: type of message
    type: int
    #: the message associated with the message_reference
    referenced_message: Unknownish[t.Optional[Message]] = UNKNOWN
    #: id of the guild the message was sent in
    guild_id: Unknownish[Snowflake] = UNKNOWN
    #: reactions to the message
    reactions: Unknownish[t.List[Reaction]] = UNKNOWN
    #: used for validating a message was sent
    nonce: Unknownish[t.Union[int, str]] = UNKNOWN
    #: if the message is generated by a webhook, this is the webhook's id
    webhook_id: Unknownish[Snowflake] = UNKNOWN
    #: sent with Rich Presence-related chat embeds
    activity: Unknownish[MessageActivity] = UNKNOWN
    #: sent with Rich Presence-related chat embeds
    application: Unknownish[t.Dict[str, t.Any]] = UNKNOWN
    #: if the message is a response to an Interaction, this is the id of the
    #: interaction's application
    application_id: Unknownish[Snowflake] = UNKNOWN
    #: data showing the source of a crosspost, channel follow add, pin, or
    #: reply message
    message_reference: Unknownish[MessageReference] = UNKNOWN
    #: message flags combined as a bitfield
    flags: Unknownish[int] = UNKNOWN
    #: sent if the message is a response to an Interaction
    interaction: Unknownish[MessageInteraction] = UNKNOWN
    #: the thread that was started from this message, includes thread member
    #: object
    thread: Unknownish[Channel] = UNKNOWN
    #: sent if the message contains components like buttons, action rows, or
    #: other interactive components
    components: Unknownish[t.List[Component]] = UNKNOWN
    #: sent if the message contains stickers
    sticker_items: Unknownish[t.List[StickerItem]] = UNKNOWN
    #: Deprecated the stickers sent with the message
    stickers: Unknownish[t.List[Sticker]] = UNKNOWN
